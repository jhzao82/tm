empty=
stats.serviceIPPointsWonPct.title=Service In-play Points Won Percentage (excluding aces and double faults)
stats.returnIPPointsWonPct.title=Return In-play Points Won Percentage (excluding aces and double faults against)
stats.rtnToSvcPointsRatio.title=Return points played divided by Service Points played
stats.pointsDominanceRatio.title=Points Dominance Ratio: % of return points won divided by % of service points lost
stats.gamesDominanceRatio.title=Games Dominance Ratio: % of return games won divided by % of service games lost
stats.breakPointsRatio.title=Break Points Ratio: % of break points converted divided by % of faced break points lost
stats.overPerformingRatio.title=Points to Matches Over-Performing Ratio: % of matches won divided by % of total points won
stats.pointsToSetsOverPerformingRatio.title=Points to Sets Over-Performing Ratio: % of sets won divided by % of total points won
stats.pointsToGamesOverPerformingRatio.title=Points to Games Over-Performing Ratio: % of games won divided by % of total points won
stats.servicePointsToServiceGamesOverPerformingRatio.title=Service Points to Service Games Over-Performing Ratio: % of service games won divided by % of service points won
stats.returnPointsToReturnGamesOverPerformingRatio.title=Return Points to Return Games Over-Performing Ratio: % of return games won divided by % of return points won
stats.pointsToTieBreaksOverPerformingRatio.title=Points to Tie Breaks Over-Performing Ratio: % of tie breaks won divided by % of total points won
stats.gamesToMatchesOverPerformingRatio.title=Games to Matches Over-Performing Ratio: % of matches won divided by % of games won
stats.gamesToSetsOverPerformingRatio.title=Games to Sets Over-Performing Ratio: % of sets won divided by % of games won
stats.setsToMatchesOverPerformingRatio.title=Sets to Matches Over-Performing Ratio: % of matches won divided by % of sets won
stats.breakPointsOverPerformingRatio.title=Break Points Over-Performing Ratio: % of break points won (saved + converted) divided by % of total points won
stats.breakPointsSavedOverPerformingRatio.title=Break Points Saved Over-Performing Ratio: % of break points saved divided by % of service points won
stats.breakPointsConvertedOverPerformingRatio.title=Break Points Converted Over-Performing Ratio: % of break points converted divided by % of return points won
stats.opponentRank.title=Average opponent rank (geometric mean)
stats.opponentEloRating.title=Average opponent Elo rating (arithmetic mean)
stats.upsetsScored.title=Matches won over higher ranked players (according to ATP ranking)
stats.upsetsScoredPct.title=% of Matches won over higher ranked players (according to ATP ranking)
stats.upsetsAgainst.title=Matches lost from lower ranked players (according to ATP ranking)
stats.upsetsAgainstPct.title=% of Matches lost from lower ranked players (according to ATP ranking)
stats.upsets.title=Matches won over higher ranked players + Matches lost from lower ranked players (according to ATP ranking)
stats.upsetsPct.title=% Matches won over higher ranked players + Matches lost from lower ranked players (according to ATP ranking)
h2h.adjustedH2H.title=Adjusted H2H takes into account surface and importance skew in H2H matches and normalizes it (average of Surface Adjusted H2H and Importance Adjusted H2H)
h2h.surfaceAdjustedH2H.title=Surface adjusted H2H takes into account how much two players have played against each other on different surfaces and then weights their surface H2Hs with how much each of them played on the surface
h2h.importanceAdjustedH2H.title=Importance adjusted H2H weights H2H matches by match importance by tournament level and round as in Big Wins and then normalizes H2H to actual number of H2H matches played
event.participation.title=Participation percentage measures how much the best players participate in the draw (100% if all top players participate in the draw). Formula: sum(ParticipationWeight(rank)) / sum(ParticipationWeight(1..PlayerCount)): i.e. sum of participation weights of all players in the draw compared to maximal participation weight if all top players would have been participated, where participation weight depend on ranking (see Participation Weights in the Glossary page).
event.strength.title=Tournament strength measures how hard is to win a tournament based on weighted Elo ratings of the participating players. Formula: sum(ParticipationWeight(EloSeeding) * (Elo - 1500) / 400) * BestOfFactor, i.e. weighted sum of participating players strengths based on Elo Rating multiplied by best-of factor: 1.25 for Grand Slam, 1 for other tournaments (better player has 25% more chances to win in best-of-5 compared to best-of-3), where weight depend on Elo-based seeding (see Participation Weights in the Glossary page).
event.averageEloRating.title=Average Elo rating measures average strength of the participating players. Formula: sum(ParticipationWeight(EloSeeding) * EloRating) / sum(ParticipationWeight(1..PlayerCount)), i.e. weighted average of participating players Elo ratings at the beginning of the tournament, where weight depend on Elo-based seeding (see Participation Weights in the Glossary page).
event.participationWeights.title=Participation weights: Weights of players participating in the tournament based on their ranking or seeding (depends on context): [1: 100, 2: 85, 3: 75, 4: 67, 5: 60, 6: 55, 7-8: 50, 9-10: 45, 11-13: 40, 14-16: 35, 17-20: 30, 21-25: 25, 26-30: 20, 31-35: 16, 36-40: 13, 41-45: 10, 46-50: 8, 51-60: 6, 61-70: 5, 71-80: 4, 81-100: 3, 101-150: 2, 151-200: 1]
event.courtSpeed.title=Court Speed Index (1 - 100): 90 * cube-root(Ace % * (Service Points Won % - 50%) * (Service Games Won % - 50%)) - 65, where statistics figures are adjusted with server's and returner's relative figure difference averaged by season
event.titleDifficulty.title=Factor of difficulty to win the title compared to a difficulty for an average title winner to win an average tournament event of the same tournament level (calculation steps: first, probabilities to win the title for an average title winner of the same tournament level are calculated based on average Elo Ratings of the title winners as well as Elo Ratings of the opponents the actual winner has faced (P = 1 / (1 + 10 ^ ((AvgWinnerElo - ActualOpponentElo) / 400)); second, difficulty to win the title is calculated as the sum of inverse probabilities from the first step; third, title difficulty is normalized so that the average difficulty of the same tournament level is 1). Example: Difficulty Factor of 1.315 means that a title was 31.5% harder to win compared to an average title of the same tournament level.
match.greatnessScore.title=Match Greatness Score is proportional to match factor (depending on tournament level and round as in Big Wins), player rankings factor (as in Big Wins), player career high rankings factor (as in Big Wins), player Elo Ratings (((WinnerElo - 1500) / 400 + (LoserElo - 1500) / 400) / 2) and match length (sqrt(sets * (games + 2 * tie breaks)))
forecast.drawLuck.title=Draw Luck represents how much player has benefited or penalized with the actual draw compared to the average draw. It is calculated as relative difference in title winning percentage of the actual draw compared to the average draw.
forecast.drawBonus.title=Draw Bonus represents how much player has benefited or penalized with the actual draw. It is calculated as relative difference in title winning percentage of the actual draw compared to the average draw without seeding and random byes. Thus Draw Bonus incorporates both draw luck and draw seeding factors.
goatPoints.total.title=Total Points
goatPoints.tournament.title=Tournament Points
goatPoints.totalTournament.title=Total Tournament Points
goatPoints.ranking.title=Ranking Points
goatPoints.careerRanking.title=Career Ranking Points
goatPoints.totalRanking.title=Total Ranking Points
goatPoints.yearEndRanking.title=Year-End Rank Points
goatPoints.weeksAtNo1.title=Weeks at No. 1 Points (rounded to 1 decimal for season, rounded sum of unrounded values for career)
goatPoints.weeksAtEloTopN.title=Weeks at Elo Top 5 Points (rounded to 1 decimal for season, rounded sum of unrounded values for career)
goatPoints.greatestRivalries.title=Greatest Rivalries
goatPoints.achievements.title=Achievements Points
goatPoints.careerAchievements.title=Career Achievements Points
goatPoints.totalAchievements.title=Total Achievements Points
goatPoints.bigWins.title=Big Wins Points (rounded to 1 decimal for season, rounded sum of unrounded values for career)
goatPoints.seasonGS.title=Season Grand Slam Points
goatPoints.careerGS.title=Career Grand Slam Points, Grand Slam Holder Points and Repeating wins at the same Grand Slam tournament Points
h2hSeries.notes=Minimum 3 matches in H2H series, minimum 10 H2H series
rivalry.score.title=Rivalry score: sum(1 + match GOAT points), where match GOAT points is: [GS F: 8, GS SF: 4, GS QF: 2, GS R16: 1, TF F: 6, TF SF: 3, TF RR: 1, M F: 4, M SF: 2...] as in Big Wins match factor in GOAT Points legend
player.surfaceSpecialization.title=Surface Specialization rating quantifies how much player is specialized in his favorite surface. Rating of 50% means that player performance on favorite surface is at least twice as good as on the worst surface. Theoretical rating of 100% is used when player wins all matches on favorite surface and loses all matches on the least favorite surface. Relative difference between two winning percentages is calculated as arithmetic mean of the relative difference between winning percentages and the relative difference between corresponding losing percentages. Examples: difference between 50% and 60% is 18%, between 60% and 80% is 37%, between 80% and 90% is 31%.
profileTab.matches=